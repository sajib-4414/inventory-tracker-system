first understood what data, here its paint data stock.
then understood what kind of users.
what the users role.
then tech stack.
then database modelling

User
firstname
lastname,
username
type->Admin, Painter, Supervisor, SupplyCoordinator
enable->true/false
Roles:[]

Role:
PaintVIEWUpateOnlyAssigned-> for painter. only update.
PaintAll-> for jane, can delete,add, update quantity. For Admin also.
PaintView->For Supervisor
TaskViewUpdateForOwn-> for painter, can mark as done, and can see own tasks.
TaskCreateViewUpdateDeleteAssign->Supervisor, Admin.
RolePermissionManage

Permission:
paint_update_all, paint_update_assigned,
paint_view_all, paint_view_own,
paint_create, paint_delete.

task_own_view, task_own_update
task_create, task_delete, task_view_all, task_update_any, task_assign

can_assign_role,can_manage_role, can_manage_permissions

Paint,
color
id


this extra model to support updating stock easily, inquiry stock related queries.also to support same color
paint of different brand. 
Stock
paintID:
ofPaintColor:
quantity:

Task
houseNumber
paintColor
userId
status: Due/Done
created_at:

assumes how much color is not specified, so its painters duty to update the color as needed.

import 'express-async-errors';
is needed to syncrhonously throw errors even if not passed as next(error)